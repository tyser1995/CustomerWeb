@model CustomerWeb.Models.Customer

@{
    ViewData["Title"] = "Edit Customer";
}

<h2>Edit Customer</h2>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
        <span asp-validation-for="FullName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Birthdate"></label>
        <input asp-for="Birthdate" type="date" class="form-control" />
        <span asp-validation-for="Birthdate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Gender"></label>
        <select asp-for="Gender" class="form-control">
            <option value="">Select Gender</option>
            @*  <option value="male" @(Model.Gender == "male" ? "selected" : "")>Male</option>
            <option value="female" @(Model.Gender == "female" ? "selected" : "")>Female</option> *@
            <option value="male">Male</option>
            <option value="female">Female</option>
        </select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>

    <h4>Contact Numbers</h4>
    <div id="contact-numbers-container">
        @for (int i = 0; i < Model.ContactNumbers.Count; i++)
        {
            <div class="form-group" data-id="@Model.ContactNumbers[i].Id">
                <input type="hidden" name="ContactNumbers[@i].Id" value="@Model.ContactNumbers[i].Id" />
                <input type="hidden" name="ContactNumbers[@i].IsDeleted" value="false" />
                <label>Type</label>
                <input name="ContactNumbers[@i].Type" class="form-control" value="@Model.ContactNumbers[i].Type" required />
                <label>Number</label>
                <input name="ContactNumbers[@i].Number" class="form-control" type="tel" value="@Model.ContactNumbers[i].Number" required />
                <button type="button" class="btn btn-danger remove-contact-number mt-2">Remove</button>
            </div>
        }
    </div>
    <button type="button" id="add-contact-number" class="btn btn-secondary mt-2 mb-4">Add Another Contact Number</button>

    <h4>Addresses</h4>
    <div id="addresses-container">
        @for (int i = 0; i < Model.Addresses.Count; i++)
        {
            <div class="form-group" data-id="@Model.Addresses[i].Id">
                <input type="hidden" name="Addresses[@i].Id" value="@Model.Addresses[i].Id" />
                <input type="hidden" name="Addresses[@i].IsDeleted" value="false" />
                <label>Barangay</label>
                <input name="Addresses[@i].Barangay" class="form-control" value="@Model.Addresses[i].Barangay" required />
                <label>City</label>
                <input name="Addresses[@i].City" class="form-control" value="@Model.Addresses[i].City" required />
                <label>Province</label>
                <input name="Addresses[@i].Province" class="form-control" value="@Model.Addresses[i].Province" required />
                <button type="button" class="btn btn-danger remove-address mt-2">Remove</button>
            </div>
        }
    </div>
    <button type="button" id="add-address" class="btn btn-secondary mt-2 mb-4">Add Another Address</button>

    <br />
    <button type="submit" class="btn btn-primary mt-2">Save</button>
</form>

@section Scripts {
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.validate.unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        let contactNumberIndex = @Model.ContactNumbers.Count;
        let addressIndex = @Model.Addresses.Count;

        document.getElementById('add-contact-number').addEventListener('click', function () {
            const container = document.getElementById('contact-numbers-container');
            const fieldGroup = document.createElement('div');
            fieldGroup.className = 'form-group';
            fieldGroup.innerHTML = `
                                <label>Type</label>
                                <input name="ContactNumbers[${contactNumberIndex}].Type" class="form-control" required />
                                <label>Number</label>
                                <input name="ContactNumbers[${contactNumberIndex}].Number" class="form-control" type="tel" required />
                                <button type="button" class="btn btn-danger remove-contact-number mt-2">Remove</button>
                            `;
            container.appendChild(fieldGroup);
            contactNumberIndex++;
        });

        document.getElementById('add-address').addEventListener('click', function () {
            const container = document.getElementById('addresses-container');
            const fieldGroup = document.createElement('div');
            fieldGroup.className = 'form-group';
            fieldGroup.innerHTML = `
                                <label>Barangay</label>
                                <input name="Addresses[${addressIndex}].Barangay" class="form-control" required />
                                <label>City</label>
                                <input name="Addresses[${addressIndex}].City" class="form-control" required />
                                <label>Province</label>
                                <input name="Addresses[${addressIndex}].Province" class="form-control" required />
                                <button type="button" class="btn btn-danger remove-address mt-2">Remove</button>
                            `;
            container.appendChild(fieldGroup);
            addressIndex++;
        });

        document.getElementById('contact-numbers-container').addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-contact-number')) {
                const field = event.target.parentElement;
                field.querySelector('input[name$=".IsDeleted"]').value = 'true';
                field.remove();
            }
        });

        document.getElementById('addresses-container').addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-address')) {
                const field = event.target.parentElement;
                field.querySelector('input[name$=".IsDeleted"]').value = 'true';
                field.remove();
            }
        });
    </script>
}
